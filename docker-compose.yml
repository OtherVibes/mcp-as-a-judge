version: '3.8'

services:
  mcp-as-a-judge:
    image: ghcr.io/hepivax/mcp-as-a-judge:latest
    container_name: mcp-as-a-judge
    ports:
      - "8050:8050"
    environment:
      - TRANSPORT=sse
      - HOST=0.0.0.0
      - PORT=8050
      - LOG_LEVEL=INFO
      - DEBUG=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network
    profiles:
      - production

  # Development service - builds from source
  mcp-as-a-judge-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    container_name: mcp-as-a-judge-dev
    ports:
      - "8050:8050"
    environment:
      - TRANSPORT=sse
      - HOST=0.0.0.0
      - PORT=8050
      - LOG_LEVEL=DEBUG
      - DEBUG=true
      - DEVELOPMENT_MODE=true
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./.env:/app/.env
    command: ["uv", "run", "src/mcp_as_a_judge/server.py"]
    restart: "no"
    networks:
      - mcp-network
    profiles:
      - development

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mcp-as-a-judge
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - production

networks:
  mcp-network:
    driver: bridge


